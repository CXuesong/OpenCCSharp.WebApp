"use strict";(self.webpackChunkOpenCCSharp_WebApp=self.webpackChunkOpenCCSharp_WebApp||[]).push([[15],{15:(n,t,e)=>{let a;async function r(){const{boot:n,getBootStatus:t,BootStatus:r}=await e.e(166).then(e.t.bind(e,166,23));switch(t()){case r.Standby:return a=(async()=>{try{await n()}finally{a=void 0}})();case r.Booted:return;default:return a}}async function i(n,t,a){await r();const{OpenCCSharp:i}=await e.e(166).then(e.t.bind(e,166,23)),o=await i.WebApp.Managed.TryConvertStringVariant(n,t,a);if(null==o)throw new Error(`指定的转换对不受支持：${t} -> ${a}。`);return o}async function o(n,t){await r();const{OpenCCSharp:a}=await e.e(166).then(e.t.bind(e,166,23));return a.WebApp.Managed.IsConversionSupported(n,t)}async function s(){await r();const{OpenCCSharp:n}=await e.e(166).then(e.t.bind(e,166,23));return n.WebApp.Managed.GetVersionNumbers()}e.r(t),e.d(t,{ensureInitialized:()=>r,convertVariant:()=>i,isVariantConversionSupported:()=>o,getManagedLibVersions:()=>s})}}]);
//# sourceMappingURL=15.index.js.map